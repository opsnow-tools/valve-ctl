#!/bin/bash

CUR_DIR=${0%/*}
CUR_OBJECT=`echo $CUR_DIR | cut -d "/" -f6`
CUR_NAME=${0##*/}

####### common functions
source ${ROOT_SHELL_DIR}/common.sh

readonly SHORT_OPT="hvn:u:"
readonly LONG_OPT="help,verbose,name:,url:"

_help() {
    cat <<EOF
================================================================================
Usage: valve ${CUR_OBJECT} ${CUR_NAME}

Params:
    -h, --help                                          현재 화면을 보여줍니다.

    -n, --name                      (requirement)       템플릿의 이름을 이용하여 제거합니다. 주소와 같이 파라미터로 받습니다.
    -u, --url                       (requirement)       템플릿의 주소를 이용하여 제거합니다. 이름과 같이 파라미터로 받습니다.

Examples:
    [Mandatory]
    $ cd {PROJECT}
    $ valve repo remove --name example --url git@github.com:example/examgle.git
================================================================================
EOF
}

_run() {
    OPTIONS=$(getopt -l "${LONG_OPT}" -o "${SHORT_OPT}" -a -- "$@"  2>${CUR_DIR}/.tmp)
    if  [ $? -eq 1 ]; then
        _help
        _error_noreport "Error params: `cat ${CUR_DIR}/.tmp && rm -f ${CUR_DIR}/.tmp `"
    elif ! [[ $@ =~ '-' ]]; then
        _help
        _error_noreport "Error params: $@"
    fi
    eval set -- "${OPTIONS}"

    while [ $# -gt 0 ]; do
        case "$1" in
            -n|--name)
                shift
                PARAMS_NAME=$1
                ;;
            -u|--url)
                shift
                PARAMS_URL=$1
                ;;
            -h|--help)
                _help
                exit 0
                ;;
            -v|--verbose)
                DEBUG_MODE=true
                VERBOSE=$(($VERBOSE + 1))
                ;;
            --)
                shift
                break
               ;;
        esac
        shift
    done

    if [ ! -z ${PARAMS_NAME} ] && [ ! -z ${PARAMS_URL} ]; then
        _remove
    else
        _help
        _error_noreport "Use valve repo remove -h or valve repo remove --help"
    fi
}

##################################################################################
_remove() {
    _debug_mode
    #_command 'cat ${CONFIG} | grep "${PARAMS_NAME} ${PARAMS_URL}" | wc -l | xargs'
    #cat ${CONFIG} | grep "${PARAMS_NAME} ${PARAMS_URL}" | wc -l | xargs
    CNT=$(cat ${CONFIG} | grep "${PARAMS_NAME} ${PARAMS_URL}" | wc -l | xargs)
    

    if [ ${CNT} -eq 0 ]; then
        _error ${PARAMS_NAME}" is not in config file. Remove not success"
    else
        command_chk_exitcode "cat ${CONFIG} | grep -v "${PARAMS_NAME} ${PARAMS_URL}" > ${CONFIG}-tmp"
        command_chk_exitcode "mv ${CONFIG}-tmp ${CONFIG}"

        CNT_TITLE=$(cat ${CONFIG} | grep -A1 "REPO" | wc -l | xargs)        # To remove ### REPO LIST ### title
        if [ ${CNT_TITLE} -eq 1 ]; then
            command_chk_exitcode "cat ${CONFIG} | grep -v "REPO" > ${CONFIG}-tmp"
            command_chk_exitcode "mv ${CONFIG}-tmp ${CONFIG}"
        fi
        
        command_chk_exitcode "rm -rf ${CONFIG_DIR}/repo/${PARAMS_NAME}"
        command_chk_exitcode "cat ${CONFIG}"

        _success "valve repo "${PARAMS_NAME}" remove success"
    fi
}
##################################################################################

_run $@